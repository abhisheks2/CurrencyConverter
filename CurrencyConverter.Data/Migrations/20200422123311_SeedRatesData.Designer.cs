// <auto-generated />
using System;
using CurrencyConverter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyConverter.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200422123311_SeedRatesData")]
    partial class SeedRatesData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyConverter.Models.ConversionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ConversionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FromAmount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("FromCurrency")
                        .HasColumnType("int");

                    b.Property<double>("RateApplied")
                        .HasColumnType("float");

                    b.Property<double>("ToAmount")
                        .HasColumnType("float");

                    b.Property<int>("ToCurrency")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Conversions");
                });

            modelBuilder.Entity("CurrencyConverter.Models.CurrencyConversionRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FromCurrency")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("ToCurrency")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromCurrency = 0,
                            Rate = 1.25,
                            ToCurrency = 2
                        },
                        new
                        {
                            Id = 2,
                            FromCurrency = 0,
                            Rate = 1.1499999999999999,
                            ToCurrency = 1
                        },
                        new
                        {
                            Id = 3,
                            FromCurrency = 0,
                            Rate = 1.97,
                            ToCurrency = 3
                        },
                        new
                        {
                            Id = 4,
                            FromCurrency = 1,
                            Rate = 0.87,
                            ToCurrency = 0
                        },
                        new
                        {
                            Id = 5,
                            FromCurrency = 1,
                            Rate = 1.0900000000000001,
                            ToCurrency = 2
                        },
                        new
                        {
                            Id = 6,
                            FromCurrency = 1,
                            Rate = 1.71,
                            ToCurrency = 3
                        },
                        new
                        {
                            Id = 7,
                            FromCurrency = 2,
                            Rate = 0.81000000000000005,
                            ToCurrency = 0
                        },
                        new
                        {
                            Id = 8,
                            FromCurrency = 2,
                            Rate = 0.92000000000000004,
                            ToCurrency = 1
                        },
                        new
                        {
                            Id = 9,
                            FromCurrency = 2,
                            Rate = 1.5700000000000001,
                            ToCurrency = 3
                        },
                        new
                        {
                            Id = 10,
                            FromCurrency = 3,
                            Rate = 0.51000000000000001,
                            ToCurrency = 0
                        },
                        new
                        {
                            Id = 11,
                            FromCurrency = 3,
                            Rate = 0.58999999999999997,
                            ToCurrency = 1
                        },
                        new
                        {
                            Id = 12,
                            FromCurrency = 3,
                            Rate = 0.64000000000000001,
                            ToCurrency = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
